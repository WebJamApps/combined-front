{
  "name": "combined-front",
  "version": "0.8.2",
  "description": "Front End of web-jam.com App",
  "main": "dist/index.html",
  "repository": {
    "url": "git+ssh://git@github.com/WebJamApps/combined-front.git",
    "type": "git"
  },
  "author": "HandlersAndKickers",
  "engines": {
    "node": "10.13.0"
  },
  "files": [
    "webpack.config.js",
    "src/"
  ],
  "license": "MIT",
  "dependencies": {
    "@babel/core": "^7.0.0",
    "@babel/plugin-proposal-class-properties": "^7.0.0",
    "@babel/plugin-proposal-decorators": "^7.0.0",
    "@babel/plugin-proposal-do-expressions": "^7.0.0",
    "@babel/plugin-proposal-export-default-from": "^7.0.0",
    "@babel/plugin-proposal-export-namespace-from": "^7.0.0",
    "@babel/plugin-proposal-function-sent": "^7.0.0",
    "@babel/plugin-proposal-json-strings": "^7.0.0",
    "@babel/plugin-proposal-logical-assignment-operators": "^7.0.0",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.0.0",
    "@babel/plugin-proposal-numeric-separator": "^7.0.0",
    "@babel/plugin-proposal-optional-chaining": "^7.0.0",
    "@babel/plugin-proposal-pipeline-operator": "^7.0.0",
    "@babel/plugin-proposal-throw-expressions": "^7.0.0",
    "@babel/plugin-syntax-dynamic-import": "^7.0.0",
    "@babel/plugin-syntax-flow": "^7.0.0",
    "@babel/plugin-syntax-import-meta": "^7.0.0",
    "@babel/plugin-transform-flow-strip-types": "^7.0.0",
    "@babel/polyfill": "^7.0.0",
    "@babel/preset-env": "^7.0.0",
    "@babel/preset-react": "^7.0.0",
    "@babel/register": "^7.0.0",
    "@material-ui/core": "1.5.1",
    "au-table": "latest",
    "aurelia-animator-css": "^1.0.4",
    "aurelia-auth": "latest",
    "aurelia-bootstrapper": "^2.2.0",
    "aurelia-dependency-injection": "^1.2.0",
    "aurelia-fetch-client": "latest",
    "aurelia-history": "^1.1.0",
    "aurelia-loader-nodejs": "latest",
    "aurelia-path": "^1.1.1",
    "aurelia-polyfills": "^1.3.0",
    "aurelia-router": "latest",
    "aurelia-templating": "latest",
    "aurelia-validation": "1.2.3",
    "aurelia-webpack-plugin": "latest",
    "autoprefixer": "^8.1.0",
    "babel-core": "^7.0.0-bridge.0",
    "babel-loader": "^8.0.0",
    "bluebird": "latest",
    "bootstrap": "latest",
    "copy-webpack-plugin": "^4.5.1",
    "css-loader": "^0.28.11",
    "csvjson": "latest",
    "dotenv": "latest",
    "expose-loader": "^0.7.5",
    "extract-text-webpack-plugin": "next",
    "file-loader": "^1.1.11",
    "file-saver": "^1.3.8",
    "font-awesome": "4.7.0",
    "global": "^4.3.2",
    "hammerjs": "^2.0.8",
    "html-loader": "^0.5.5",
    "html-webpack-plugin": "^3.0.6",
    "jasmine-spec-reporter": "latest",
    "jquery": "^3.2.1",
    "material-ui-time-picker": "latest",
    "mini-css-extract-plugin": "^0.4.0",
    "minimatch": "^3.0.4",
    "nps": "latest",
    "nps-utils": "latest",
    "popper.js": "^1.12.9",
    "postcss": "^6.0.14",
    "postcss-loader": "latest",
    "postcss-sass": "^0.2.0",
    "react": "^16.3.0",
    "react-dom": "^16.3.0",
    "react-player": "^1.6.4",
    "react-redux": "^5.0.6",
    "redux": "^3.7.2",
    "snyk": "latest",
    "style-loader": "latest",
    "through2": "^2.0.3",
    "uglify-js": "latest",
    "url-loader": "latest",
    "wait-on": "latest",
    "webpack": "latest",
    "webpack-bundle-analyzer": "latest",
    "webpack-cli": "latest"
  },
  "peerDependencies": {},
  "devDependencies": {
    "assertions-counter": "latest",
    "aurelia-cli": "latest",
    "aurelia-pal-nodejs": "latest",
    "aurelia-protractor-plugin": "latest",
    "aurelia-testing": "latest",
    "aurelia-tools": "latest",
    "babel-eslint": "7.2.3",
    "babel-jest": "latest",
    "babel-plugin-istanbul": "latest",
    "enzyme": "latest",
    "enzyme-adapter-react-16": "latest",
    "enzyme-react-16-adapter-setup": "latest",
    "eslint": "latest",
    "eslint-config-airbnb": "latest",
    "eslint-plugin-import": "latest",
    "eslint-plugin-jest": "latest",
    "eslint-plugin-jsx-a11y": "latest",
    "eslint-plugin-node": "latest",
    "eslint-plugin-react": "latest",
    "eslint-plugin-security": "latest",
    "htmlhint": "latest",
    "istanbul-combine": "latest",
    "istanbul-instrumenter-loader": "latest",
    "jasmine-core": "latest",
    "jest": "latest",
    "jest-cli": "latest",
    "jest-jasmine2": "latest",
    "jest-matchers": "latest",
    "jsdom": "latest",
    "json-loader": "latest",
    "karma": "latest",
    "karma-babel-preprocessor": "latest",
    "karma-chrome-launcher": "latest",
    "karma-coverage": "latest",
    "karma-coverage-istanbul-reporter": "latest",
    "karma-jasmine": "latest",
    "karma-mocha-reporter": "latest",
    "karma-webpack": "^4.0.0-rc.2",
    "protractor": "^5.4.1",
    "sinon": "latest",
    "stylelint": "latest",
    "stylelint-config-standard": "latest",
    "webpack-dev-server": "latest"
  },
  "scripts": {
    "start": "nps",
    "test": "yarn run test:html && yarn run test:stylelint && npm run test:lint && rm -rf coverage && npm run test:jest && npm run test:jest-react && npm run test:karma && npm run combine-coverage && npm run protractor",
    "combine-coverage": "istanbul-combine -d coverage -p none -r lcov -r html coverage/jest-react/coverage-final.json coverage/jest/coverage-final.json coverage/coverage-karma/coverage-final.json",
    "test:jest": "cross-env NODE_ENV=test && jest --no-cache --config jest.config.json --notify",
    "protest": "nps test",
    "test:jest-react": "nps test.react",
    "test:jest-react-u": "nps test.react.accept",
    "test:karma": "cross-env NODE_ENV=test nps test.karma",
    "test:debug": "cross-env NODE_ENV=test nps test.karma.debug",
    "test:lint": "nps test.lint",
    "installglobals": "npm i -g npm@latest && npm i -g yarn@latest",
    "cleaninstall": "rm -rf yarn.lock && rm -rf node_modules && yarn cache clean && yarn install",
    "snyk-protect": "snyk protect",
    "eslint:fix": "./node_modules/eslint/bin/eslint.js --fix .",
    "fix:aurelia-val": "rm -rf ./node_modules/aurelia-validation/node_modules",
    "postinstall": "npm run fix:aurelia-val && npm start -- build",
    "protractor": "nps e2e",
    "test:stylelint": "stylelint \"src/**/*.html\" && stylelint \"static/**/*.css\"",
    "test:html": "htmlhint src/**/*.html"
  },
  "snyk": true
}
